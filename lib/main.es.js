const e=()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const t=Math.trunc(16*Math.random());return("x"===e?t:3&t|8).toString(16)}),t=()=>{const t=Date.now().toString(16).padStart(12,"0");return[t.slice(0,8),t.slice(8),"7"+e().slice(15)].join("-")},r=()=>{const x=new Map(Object.entries({v4:e,v7:t}));return new Proxy(()=>r(),((e=new Map,t=Object())=>Object.assign({construct:(e,t)=>e(t?.entries()),defineProperty:(e,t,r)=>!1,deleteProperty:(e,t)=>!1,get:(t,r)=>e.get(r),getOwnPropertyDescriptor:(t,r)=>Object.getOwnPropertyDescriptor(Object.fromEntries(e),r),getPrototypeOf:e=>null,has:(t,r)=>e.has(r),isExtensible:e=>!1,ownKeys:t=>Array.from(e.keys()),preventExtensions:e=>!1,set:(e,t,r)=>!1,setPrototypeOf:(e,t)=>!1},t))(x,{apply:()=>x.get("v7")(),get:(e,t)=>x.get(t)?.()}))},x=r();export{x as default};
